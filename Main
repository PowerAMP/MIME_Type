#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <map>

using namespace std;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
int main()
{
    int N; // Number of elements which make up the association table.
    cin >> N; cin.ignore();
    int Q; // Number Q of file names to be analyzed.
    cin >> Q; cin.ignore();
    
    string tempFileExt[Q];
    int extStart;
    map <string, string> mimeType;
    char period = '.';
    
    cerr << "Number of Filetypes: " << N << endl;
    cerr << "Number of files to analyze: " << Q << endl;
    
    for (int i = 0; i < N; i++)
    {
        string EXT; // file extension
        string MT; // MIME type.
        cin >> EXT >> MT; cin.ignore();
        
        for (int j = 0; j < EXT.length(); j++)
        {
            EXT[j] = tolower(EXT[j]);
        }
        
        cerr << "Extension: " << EXT << endl;
        cerr << "MIMEType: " << MT << endl;
        mimeType[EXT] = MT;
    }
    for (int i = 0; i < Q; i++)
    {
        string FNAME; // One file name per line.
        getline(cin, FNAME);
        
        extStart = 0;
        
        for (int j = 0; j < FNAME.size(); j++)
        {
            if (FNAME[j] == period)
            {
                extStart = j + 1;
            }
        }
        
        cerr << "File " << i + 1 << ": " << FNAME << endl;
        
        tempFileExt[i] = FNAME.substr(extStart, FNAME.length());
        
        for (int j = 0; j < tempFileExt[i].length(); j++)
        {
            tempFileExt[i][j] = tolower(tempFileExt[i][j]);
        }
        
        if (extStart == 0)
        {
            tempFileExt[i] = "UNKONWN";
        } 
       
        if (mimeType.find(tempFileExt[i]) != mimeType.end())
        {
            cerr << "Used MIME Type: " << mimeType[tempFileExt[i]] << endl;
            cout << mimeType[tempFileExt[i]] << endl;
        }
        else
        {
            cerr << "Used MIME Type: UNKNOWN" << endl;
            cout << "UNKNOWN" << endl;
        }
    
    }  



    // For each of the Q filenames, display on a line the corresponding MIME type. If there is no corresponding type, then display UNKNOWN.
    
}
